<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="spring-dao.xml" />

    <!-- 指定要扫描的包，该包下的注解才会生效 -->
    <context:component-scan base-package="com.holun.dao.impl" />
    <context:annotation-config />

    <bean id="userMapper" class="com.holun.dao.impl.UserMapperImpl" >
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <!-- 配置事务管理器，此处使用JDBC的事务管理器-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>

   <!-- &lt;!&ndash;基于注解配置声明式事务，需要启用事务管理的注解，并指定要使用的事务管理器 &ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager" />-->

    <!--基于xml配置声明式事务-->
    <!--此处只能用id，不能用name。transaction-manager指定要引用的事务管理器-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--指定要添加事务的方法，直接写方法名即可。可以有多个method元素，可以使用通配符* -->
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" /> <!--propagation 指定事务的传播行为，默认为REQUIRED-->
            <tx:method name="query*" propagation="REQUIRED"  />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="select*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

    <!--使用aop实现事务的织入(也就是将事务作为通知应用到切入点)-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="pointcut1" expression="execution(* com.holun.dao.impl.UserMapperImpl.*(..))"/>
        <!--将事务通知应用到指定的切入点-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1" />
    </aop:config>
</beans>