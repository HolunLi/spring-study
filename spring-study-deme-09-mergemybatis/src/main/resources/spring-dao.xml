<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 这里使用Spring内置的jdbc 使用Spring的数据源替换原先mybatis中配置的数据源。 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/mydatabase2?useSSL=false&amp;serverTimezone=GMT%2B8" />
        <property name="username" value="root" />
        <property name="password" value="haolun" />
    </bean>

    <!--
    在mybatis中是使用SqlSessionFactoryBuilder来创建 SqlSessionFactory
    而在 MyBatis-Spring 中，是使用 SqlSessionFactoryBean来创建 SqlSessionFactory
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注意：SqlSessionFactory 需要一个 DataSource（数据源）。这可以是任意的 DataSource-->
        <property name="dataSource" ref="dataSource" />
        <!-- 绑定mybatis核心配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 指定Mapper(映射文件)的位置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>

    <!--
    使用sqlSessionFactory创建SqlSessionTemplate, SqlSessionTemplate就是 mybatis中的SqlSession
    SqlSessionTemplate（SqlSession模板）类实现了SqlSession接口
    -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" >
        <!-- 只能使用构造器注入sqlSessionFactory,因为SqlSessionTemplate类中没有set方法 -->
        <constructor-arg index="0" ref="sqlSessionFactory"  />
    </bean>

</beans>